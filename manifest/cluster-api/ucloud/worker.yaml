apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineDeployment
metadata:
  name: "test-md-0"
spec:
  clusterName: "test"
  replicas: 5
  selector:
    matchLabels:
      cluster.x-k8s.io/deployment-name: test-md-0
  template:
    metadata:
      labels:
        cluster.x-k8s.io/deployment-name: test-md-0
    spec:
      clusterName: "test"
      version: "v1.18.1" #注意与集群中的版本信息保持一致
      bootstrap:
        configRef:
          name: "test-md-0"
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: "test-md-0"
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
        kind: UCloudMachineTemplate

---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: UCloudMachineTemplate
metadata:
  name: "test-md-0"
spec:
  template:
    spec:
      instanceType: "uhost"
      sshPassword: "Y2x1c3Rlci1hcGk=" #替换为经过 base64 编码的登录密码
      # imageId: "uimage-ooewdu1u"

---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfigTemplate
metadata:
  name: "test-md-0"
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            network-plugin: "cni"
      preKubeadmCommands:
        - bash -c /tmp/pre-kubeadm-bootstrap.sh
      files:
        - path: /tmp/pre-kubeadm-bootstrap.sh
          owner: "root:root"
          permissions: "0744"
          content: |
            #!/bin/bash
            wget -P /tmp http://cluster-api.cn-bj.ufileos.com/cluster-api-uk8s-init.tar.gz
            tar -zxvf /tmp/cluster-api-uk8s-init.tar.gz -C /usr/local/bin
            cluster-api-uk8s-init prepare --credential=UCLOUD_CREDENTIAL --k8s-version=KUBERNETES_VERSION

# ---
# apiVersion: cluster.x-k8s.io/v1alpha3
# kind: MachineHealthCheck
# metadata:
#   name: test
# spec:
#   # clusterName is required to associate this MachineHealthCheck with a particular cluster
#   clusterName: test
#   # (Optional) maxUnhealthy prevents further remediation if the cluster is already partially unhealthy
#   maxUnhealthy: 40%
#   # (Optional) nodeStartupTimeout determines how long a MachineHealthCheck should wait for
#   # a Node to join the cluster, before considering a Machine unhealthy
#   nodeStartupTimeout: 10m
#   # selector is used to determine which Machines should be health checked
#   selector:
#     matchLabels:
#       cluster.x-k8s.io/deployment-name: test-md-0
#   # Conditions to check on Nodes for matched Machines, if any condition is matched for the duration of its tiemout, the Machine is considered unhealthy
#   unhealthyConditions:
#     - type: Ready
#       status: Unknown
#       timeout: 300s
#     - type: Ready
#       status: "False"
#       timeout: 300s
